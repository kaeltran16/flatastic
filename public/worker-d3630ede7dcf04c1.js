(()=>{async function e(){try{if(!navigator.onLine)return void console.log("Still offline, skipping sync");console.log("Performing background sync...")}catch(e){throw console.error("Background sync failed:",e),e}}importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.6.0/workbox-sw.js"),workbox?(console.log("Workbox loaded successfully"),workbox.navigationPreload.enable(),workbox.precaching.precacheAndRoute(self.__WB_MANIFEST||[]),workbox.routing.registerRoute(e=>{let{url:o}=e;return o.hostname.includes("supabase.co")},new workbox.strategies.NetworkFirst({cacheName:"supabase-api",networkTimeoutSeconds:10,plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:20,maxAgeSeconds:60}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]})),workbox.routing.registerRoute(e=>{let{request:o}=e;return"image"===o.destination},new workbox.strategies.CacheFirst({cacheName:"images",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:60,maxAgeSeconds:2592e3})]})),workbox.routing.registerRoute(e=>{let{url:o}=e;return"https://fonts.googleapis.com"===o.origin},new workbox.strategies.StaleWhileRevalidate({cacheName:"google-fonts-stylesheets"})),workbox.routing.registerRoute(e=>{let{url:o}=e;return"https://fonts.gstatic.com"===o.origin},new workbox.strategies.CacheFirst({cacheName:"google-fonts-webfonts",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:30,maxAgeSeconds:31536e3})]})),workbox.routing.registerRoute(e=>{let{request:o}=e;return"navigate"===o.mode},new workbox.strategies.NetworkFirst({cacheName:"pages",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]}))):console.log("Workbox failed to load"),self.addEventListener("install",e=>{console.log("Service Worker installing..."),self.skipWaiting()}),self.addEventListener("activate",e=>{console.log("Service Worker activating..."),e.waitUntil(Promise.all([self.clients.claim(),caches.keys().then(e=>Promise.all(e.filter(e=>e.startsWith("workbox-")&&!e.includes("6.6.0")).map(e=>caches.delete(e))))]))}),self.addEventListener("push",function(e){if(console.log("Push event received:",e),e.data)try{let o=e.data.json();console.log("Push data:",o);let t={body:o.body||"New notification",icon:o.icon||"/web-app-manifest-192x192.png",badge:o.badge||"/web-app-manifest-192x192.png",image:o.image,vibrate:o.vibrate||[100,50,100],tag:o.tag||"general",requireInteraction:o.requireInteraction||!1,actions:o.actions||[],data:{dateOfArrival:Date.now(),primaryKey:o.primaryKey||"1",url:o.url||"/",...o.data}};e.waitUntil(self.registration.showNotification(o.title||"Notification",t))}catch(o){console.error("Error processing push event:",o),e.waitUntil(self.registration.showNotification("New Notification",{body:"You have a new notification",icon:"/web-app-manifest-192x192.png",badge:"/web-app-manifest-192x192.png"}))}}),self.addEventListener("notificationclick",function(e){var o;console.log("Notification click received:",e),e.notification.close();let t=(null==(o=e.notification.data)?void 0:o.url)||"/";if(e.action)switch(console.log("Action clicked:",e.action),e.action){case"view":break;case"dismiss":return}e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then(function(e){for(let o=0;o<e.length;o++){let n=e[o];if(n.url===t&&"focus"in n)return n.focus()}if(clients.openWindow)return clients.openWindow(t)}))}),self.addEventListener("sync",function(o){console.log("Background sync event:",o.tag),"background-sync"===o.tag&&o.waitUntil(e())}),self.addEventListener("fetch",e=>{if("GET"===e.request.method&&!e.request.url.startsWith("chrome-extension://")&&e.request.url.includes("supabase.co"))return void e.respondWith(fetch(e.request).then(o=>{if(200===o.status){let t=o.clone();caches.open("supabase-api").then(o=>{o.put(e.request,t)})}return o}).catch(o=>(console.error("Supabase fetch failed:",o),caches.match(e.request))))}),self.addEventListener("error",e=>{console.error("Service Worker error:",e.error)}),self.addEventListener("unhandledrejection",e=>{console.error("Service Worker unhandled promise rejection:",e.reason)})})();