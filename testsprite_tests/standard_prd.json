{
  "meta": {
    "project": "Household Management App",
    "date": "2025-08-25",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "The Household Management App streamlines daily chore management and expense tracking for households, enabling families, roommates, and shared housing communities to efficiently organize tasks and financial responsibilities through a centralized, user-friendly platform.",
  "core_goals": [
    "Enable effortless creation and management of household groups with member profiles.",
    "Facilitate chore assignment, scheduling, and completion tracking with notifications and reminders.",
    "Provide a comprehensive expense management system including detailed expense entry, splitting, and payment tracking.",
    "Offer a unified dashboard displaying summaries of upcoming chores, expenses, and member balances.",
    "Support real-time communication and notifications related to chores and expenses.",
    "Ensure a seamless and intuitive user experience across devices with a mobile-friendly design.",
    "Guarantee data security and synchronization through secure authentication and cloud storage."
  ],
  "key_features": [
    "User Management: Create and join households with member profiles and permissions.",
    "Chore Management: Add, edit, delete chores; assign to members; set schedules; track completion with photos/notes.",
    "Expense Management: Record expenses; split costs equally or custom amounts; monitor payment statuses.",
    "Dashboard/Summary: Visual overview of chores, expenses, member balances, and notifications.",
    "Communication: In-app comments on chores and expenses; alerts for updates and new entries.",
    "Authentication System: Secure login, signup, password reset, and email confirmation flows.",
    "Payment System: Track and settle payments between household members.",
    "Profile Management: Manage user settings and preferences.",
    "PWA Features: Offline support and push notifications for enhanced engagement.",
    "Testing and Error Handling: Robust testing infrastructure and error boundaries for reliability."
  ],
  "user_flow_summary": [
    "User signs up or logs in via the authentication system and confirms email if required.",
    "User creates or joins a household group.",
    "User adds chores, assigns them to members, sets schedules and reminders.",
    "User logs expenses, selects splitting options, and tracks payment status.",
    "Users view the dashboard for an overview of pending chores and expense balances.",
    "Household members communicate through in-app messaging or comments on chores and expenses.",
    "Users manage their profiles and settings as needed.",
    "App syncs data in real-time across devices with offline support and push notifications for updates."
  ],
  "validation_criteria": [
    "All authentication flows (login, signup, reset, confirm) function correctly and securely.",
    "Chores can be added, edited, assigned, and marked complete with accurate notification delivery.",
    "Expenses can be recorded, split, filtered, and payments tracked reliably across members.",
    "Dashboard displays updated and correct summaries of chores, expenses, and member balances.",
    "In-app communication components work smoothly and send timely notifications.",
    "Progressive Web App features work offline and deliver push notifications properly.",
    "Profile and household management operate without errors and update in real-time.",
    "Comprehensive test coverage with successful Jest and Testing Library test runs.",
    "Error boundaries capture and handle runtime errors without crashing the app."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 15",
      "React 19",
      "Supabase",
      "Tailwind CSS",
      "Radix UI",
      "React Hook Form",
      "TanStack Query",
      "Motion (Framer Motion)",
      "PWA (Progressive Web App)",
      "Jest",
      "Testing Library"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Complete authentication system with login, signup, password reset, and email confirmation",
        "files": [
          "app/auth/login/page.tsx",
          "app/auth/sign-up/page.tsx",
          "app/auth/forgot-password/page.tsx",
          "app/auth/update-password/page.tsx",
          "app/auth/confirm/page.tsx",
          "app/auth/callback/page.tsx",
          "app/auth/error/page.tsx",
          "components/login-form.tsx",
          "components/sign-up-form.tsx",
          "components/forgot-password-form.tsx",
          "components/update-password-form.tsx",
          "components/auth-button.tsx",
          "components/logout-button.tsx"
        ]
      },
      {
        "name": "Dashboard",
        "description": "Main dashboard with stats, progress tracking, and recent activities",
        "files": [
          "app/dashboard/page.tsx",
          "app/dashboard/loading.tsx",
          "components/dashboard/index.tsx",
          "components/dashboard/header.tsx",
          "components/dashboard/stats-card.tsx",
          "components/dashboard/progress-cards.tsx",
          "components/dashboard/quick-actions.tsx",
          "components/dashboard/chore.tsx",
          "components/dashboard/expense.tsx"
        ]
      },
      {
        "name": "Expense Management",
        "description": "Complete expense tracking system with splitting, filtering, and settlement",
        "files": [
          "app/expenses/page.tsx",
          "components/expense/card.tsx",
          "components/expense/expense-dialog.tsx",
          "components/expense/expense-form.tsx",
          "components/expense/list.tsx",
          "components/expense/filter.tsx",
          "components/expense/stats-card.tsx",
          "components/expense/balance-sidebar.tsx",
          "components/expense/details-dialog.tsx",
          "components/expense/delete-expense-dialog.tsx",
          "components/expense/payment-dialog.tsx",
          "components/expense/error.tsx",
          "hooks/use-expense.ts",
          "hooks/use-expense-list.ts",
          "hooks/use-balance.ts",
          "hooks/use-settlement.ts"
        ]
      },
      {
        "name": "Chore Management",
        "description": "Chore tracking system with assignment, completion, and scheduling",
        "files": [
          "app/chores/page.tsx",
          "app/chore-scheduler/page.tsx",
          "components/chore/card.tsx",
          "components/chore/chore-dialog.tsx",
          "components/chore/chore-form.tsx",
          "components/chore/list.tsx",
          "components/chore/filters.tsx",
          "components/chore/stats-card.tsx",
          "components/chore/navigation.tsx",
          "components/chore/tabs.tsx",
          "components/chore/empty-state.tsx",
          "components/chore/error.tsx",
          "components/chore/requirements.tsx",
          "hooks/use-chore.ts"
        ]
      },
      {
        "name": "Household Management",
        "description": "Household creation, joining, and member management",
        "files": [
          "app/household/page.tsx",
          "components/household/",
          "hooks/use-household.ts",
          "hooks/use-household-member.ts",
          "hooks/use-household-stats.ts"
        ]
      },
      {
        "name": "Payment System",
        "description": "Payment tracking and settlement between household members",
        "files": [
          "app/payments/page.tsx",
          "components/payment/",
          "app/penalty-fund/page.tsx",
          "components/penalty-fund/add-penalty-fund-dialog.tsx"
        ]
      },
      {
        "name": "Profile Management",
        "description": "User profile management and settings",
        "files": [
          "app/profile/page.tsx",
          "components/user-avatar.tsx",
          "hooks/use-profile.ts"
        ]
      },
      {
        "name": "PWA Features",
        "description": "Progressive Web App functionality with offline support and push notifications",
        "files": [
          "app/pwa-nextjs/page.tsx",
          "app/pwa-nextjs/actions.ts",
          "app/pwa-nextjs/install-prompt.tsx",
          "app/pwa-nextjs/push-notification-manager.tsx",
          "app/pwa-nextjs/utils.ts",
          "app/offline/page.tsx",
          "hooks/use-push-notification.ts",
          "public/manifest.json",
          "public/sw.js",
          "public/sw-custom.js",
          "worker/index.js"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components built with Radix UI and Tailwind CSS",
        "files": [
          "components/ui/",
          "components/theme-switcher.tsx",
          "components/navbar.tsx",
          "components/loading-screen.tsx",
          "components/hero.tsx",
          "components/action-card.tsx",
          "components/app-breadcrumb.tsx"
        ]
      },
      {
        "name": "Data Management",
        "description": "Data fetching, caching, and state management with TanStack Query",
        "files": [
          "lib/providers/query-providers.tsx",
          "lib/providers/query-provider.tsx",
          "lib/query-keys.ts",
          "lib/supabase/",
          "lib/actions/",
          "lib/validations/"
        ]
      },
      {
        "name": "Testing Infrastructure",
        "description": "Jest and Testing Library setup for component and integration testing",
        "files": [
          "jest.config.js",
          "jest.setup.js",
          "coverage/",
          "testsprite_tests/"
        ]
      },
      {
        "name": "API Routes",
        "description": "Next.js API routes for backend functionality",
        "files": [
          "app/api/sentry-example-api/route.ts",
          "app/api/update-overdue-chore-status/route.ts",
          "app/api/webhooks/route.ts"
        ]
      },
      {
        "name": "Error Handling",
        "description": "Error boundaries and error handling components",
        "files": [
          "app/global-error.tsx",
          "components/silent-subscriber.tsx",
          "components/env-var-warning.tsx"
        ]
      },
      {
        "name": "Tutorial System",
        "description": "User onboarding and tutorial components",
        "files": [
          "components/tutorial/"
        ]
      }
    ]
  }
}
